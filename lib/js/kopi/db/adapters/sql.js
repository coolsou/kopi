// Generated by CoffeeScript 1.3.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  define("kopi/db/adapters/sql", function(require, exports, module) {
    var SQLAdapter, client, exceptions, queries;
    exceptions = require("kopi/exceptions");
    queries = require("kopi/db/queries");
    client = require("kopi/db/adapters/client");
    SQLAdapter = (function(_super) {

      __extends(SQLAdapter, _super);

      SQLAdapter.name = 'SQLAdapter';

      function SQLAdapter() {
        return SQLAdapter.__super__.constructor.apply(this, arguments);
      }

      SQLAdapter.prototype.create = function(query, fn) {};

      SQLAdapter.prototype.retrieve = function(query, fn) {};

      SQLAdapter.prototype.update = function(query, fn) {};

      SQLAdapter.prototype.destroy = function(query, fn) {};

      SQLAdapter.prototype.executeSql = function(sql, args, fn) {};

      /*
          Build sql from query
      */


      SQLAdapter.prototype._sql = function(query) {
        var self;
        self = this;
        switch (query.action) {
          case queries.RETRIEVE:
            return self._select(query);
          case queries.CREATE:
            return self._create(query);
          case queries.UPDATE:
            return self._update(query);
          case queries.DESTROY:
            return self._destroy(query);
          default:
            throw new exceptions.ValueError("query action not correct.");
        }
      };

      SQLAdapter.prototype._select = function(query) {
        var model, params, select, sql, table;
        model = query.model;
        table = model.tableName();
        select = "SELECT " + " FROM " + table;
        sql = [select];
        return params = [];
      };

      SQLAdapter.prototype._create = function(query) {};

      SQLAdapter.prototype._update = function(query) {};

      SQLAdapter.prototype._delete = function(query) {};

      SQLAdapter.prototype._columns = function(query) {
        if (!query.only()) {
          return '*';
        }
        return query.only.join(", ");
      };

      /*
          Build where sql from where object
      
          @return {Array} sql and params
      */


      SQLAdapter.prototype._where = function(where) {};

      SQLAdapter.prototype._createTable = function(model, safe) {
        var fields, table;
        if (safe == null) {
          safe = true;
        }
        table = model.tableName();
        return fields = [];
      };

      return SQLAdapter;

    })(client.ClientAdapter);
    return {
      SQLAdapter: SQLAdapter
    };
  });

}).call(this);
