// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define("kopi/tests/ui/touchable", function(require, exports, module) {
    var $, CustomGesture, PhotoGallery, Touchable, g;
    $ = require("jquery");
    Touchable = require("kopi/ui/touchable").Touchable;
    g = require("kopi/ui/gestures");
    CustomGesture = (function(_super) {

      __extends(CustomGesture, _super);

      CustomGesture.configure({
        preventDefault: true
      });

      function CustomGesture() {
        CustomGesture.__super__.constructor.apply(this, arguments);
      }

      CustomGesture.prototype.ontouchstart = function(e) {
        this._startPos = this._getPosition(e);
        this._startTime = new Date();
        this._startTouches = this._getTouches(e);
        this._startEvent = e;
        return this._setHoldTimeout(event);
      };

      CustomGesture.prototype.ontouchmove = function(e) {};

      CustomGesture.prototype.ontouchend = function(e) {};

      CustomGesture.prototype.ontouchcancel = function(e) {
        return this.touchend(e);
      };

      CustomGesture.prototype._setHoldTimeout = function(e) {};

      return CustomGesture;

    })(g.Base);
    PhotoGallery = (function(_super) {

      __extends(PhotoGallery, _super);

      PhotoGallery.widgetName("PhotoGallery");

      PhotoGallery.configure({
        gestures: [CustomGesture]
      });

      function PhotoGallery() {
        PhotoGallery.__super__.constructor.apply(this, arguments);
        this.images = [];
      }

      PhotoGallery.prototype.onskeleton = function() {
        return PhotoGallery.__super__.onskeleton.apply(this, arguments);
      };

      PhotoGallery.prototype.onrender = function() {
        var _this = this;
        $("img", this.element).each(function() {
          var img;
          img = $(_this);
          img.data("width", _this.width).data("height", _this.height);
          return _this.images.push(img);
        });
        return PhotoGallery.__super__.onrender.apply(this, arguments);
      };

      return PhotoGallery;

    })(Touchable);
    return $(function() {
      return new PhotoGallery().skeleton("#container").render();
    });
  });

}).call(this);
